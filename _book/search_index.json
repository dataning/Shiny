[
["index.html", "Shiny learning 1 What is Shiny and Shiny app?", " Shiny learning Ning Lu 2019-11-30 1 What is Shiny and Shiny app? Shiny is an R package that makes it easy to build interactive web applications (apps) straight from R. This lesson will get you started building Shiny apps right away. "],
["structure.html", "2 Structure", " 2 Structure Shiny apps are contained in a single script called app.R. The structure can be broken into four parts: Shiny package. Load the shiny package in the script first. User interface object. The user interface (ui) object controls the layout and appearance of your app. Server function. The server function contains the instructions that your computer needs to build your app shinyApp function. The shinyApp function creates Shiny app objects from an explicit UI/server pair. The script app.R can be run like a typical R script or run like a app through a folder runApp(&quot;newdir&quot;). # First part, load the package library(shiny) # Second part, define UI for the Shiny app ui &lt;- fluidPage( # App title ---- titlePanel(&quot;Hello Shiny!&quot;), # Sidebar layout with input and output definitions ---- sidebarLayout( # Sidebar panel for inputs ---- sidebarPanel( # Input: Slider for the number of bins ---- sliderInput(inputId = &quot;bins&quot;, label = &quot;Number of bins:&quot;, min = 1, max = 50, value = 30) ), # Main panel for displaying outputs ---- mainPanel( # Output: Histogram ---- plotOutput(outputId = &quot;distPlot&quot;) ) ) ) # Third part, define server logic required to draw a histogram server &lt;- function(input, output) { # Histogram of the Old Faithful Geyser Data ---- # with requested number of bins # This expression that generates a histogram is wrapped in a call # to renderPlot to indicate that: # # 1. It is &quot;reactive&quot; and therefore should be automatically # re-executed when inputs (input$bins) change # 2. Its output type is a plot output$distPlot &lt;- renderPlot({ x &lt;- faithful$waiting bins &lt;- seq(min(x), max(x), length.out = input$bins + 1) hist(x, breaks = bins, col = &quot;#75AADB&quot;, border = &quot;white&quot;, xlab = &quot;Waiting time to next eruption (in mins)&quot;, main = &quot;Histogram of waiting times&quot;) }) } # Fourth part, tie up ui and server shinyApp(ui = ui, server = server) "],
["literature.html", "3 Literature", " 3 Literature Here is a review of existing methods. "],
["methods.html", "4 Methods", " 4 Methods We describe our methods in this chapter. "],
["applications.html", "5 Applications 5.1 Example one 5.2 Example two", " 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],
["final-words.html", "6 Final Words", " 6 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
