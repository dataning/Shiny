[
["index.html", "Raising Shiny animals (apps) 1 Aim", " Raising Shiny animals (apps) Ning Lu Bradford Institute of Health Research (BIHR)Bradford Teaching Hospitals NHS Foundation Trust (BTHFT) Leeds Institute for Data Analytics, University of Leeds (LIDA)Centre for Applied Education Research (CAER) 2019-12-02 1 Aim Let’s raise a great Shiny animal. Sorry, Shiny app. "],
["shiny-animals-apps.html", "2 Shiny animals (apps)?", " 2 Shiny animals (apps)? Shiny is an R package that makes it easy to build interactive web applications (apps) straight from R. This lesson will get you started building Shiny apps right away. "],
["shinys-head.html", "3 Shiny’s head 3.1 One file 3.2 Two files", " 3 Shiny’s head Shiny app has four individual parts: head, two parts of the body and tail. The two parts contributing to the body are server and interface (UI). The head is where the shiny package gets intitated and the tail part is where two parts of the body server and interface (UI) get knitted and the shiny app is deployed. 3.1 One file This is a basic Shiny’s skeleton in the file format of app.R: library(shiny) # Head - loading the shiny package ui &lt;- fluidPage() # Upper body - setting up the interface server &lt;- function(input, output) {} # Lower body - setting up the server side shinyApp(ui= ui, server = server) # Tail - knitting both sides together 3.2 Two files For two separate files format Shiny, the ui.R will rewrite as library(shiny) shinyUI(fluidPage()) and server.R rewrite as library(shiny) shinyServer(function(input, output) {}) "],
["layout-functions.html", "4 Layout() functions", " 4 Layout() functions In the beginning of UI Layout() functions, fluidPage creates a page with fluid layout for the Shiny app. Within the section of fluidPage, there’re two main sub functions - Input() and Output() functions. ui &lt;- fluidPage( # *Input() functions, # *Output() functions ) Here is a list of all UI Layout() functions avaliable: Functions Display actionButton(actionLink) Action button/link checkboxGroupInput() Checkbox Group Input Control checkboxInput() Checkbox Input Control absolutePanel(fixedPanel) Panel with absolute positioning bootstrapPage (basicPage) Create a Bootstrap page column Create a column within a UI definition conditionalPanel Conditional Panel fillPage Create a page that fills the window fillRow (fillCol) Flex Box-based row/column layouts fixedPage (fixedRow) Create a page with a fixed layout fluidPage (fluidRow) Create a page with fluid layout headerPanel Create a header panel helpText Create a help text element icon Create an icon mainPanel Create a main panel navbarPage (navbarMenu) Create a page with a top level navigation bar navlistPanel Create a navigation list panel pageWithSidebar Create a page with a sidebar sidebarLayout Layout a sidebar and main area sidebarPanel Create a sidebar panel tabPanel Create a tab panel tabsetPanel Create a tabset panel titlePanel Create a panel containing an application title. inputPanel Input panel flowLayout Flow layout splitLayout Split layout verticalLayout Lay out UI elements vertically wellPanel Create a well panel withMathJax Load the MathJax library and typeset math expressions "],
["input-functions.html", "5 Input() functions", " 5 Input() functions This is how a common Input() function is listed: sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, ...) sliderInput: sliderInput() from a list of Input() functions inputId : input name(internal use) label : label to display on the input part of the Shiny app ..... : specific arguments or paremeters for the Input() functions Here is a list of all Input() functions avaliable: Function Display actionButton(actionLink) Action button/link checkboxGroupInput() Checkbox Group Input Control checkboxInput() Checkbox Input Control dateInput() Create date input dateRangeInput() Create date range input fileInput() File Upload Control numericInput() Create a numeric input control radioButtons() Create radio buttons selectInput(selectizeInput) Create a select list input control sliderInput(animationOptions) Slider Input Widget submitButton() Create a submit button textInput() Create a text input control textAreaInput() Create a textarea input control passwordInput() Create a password input control modalButton() Create a button for a modal dialog updateActionButton() Change the label or icon of an action button on the client updateCheckboxGroupInput() Change the value of a checkbox group input on the client updateCheckboxInput() Change the value of a checkbox input on the client updateDateInput() Change the value of a date input on the client updateDateRangeInput() Change the start and end values of a date range input on the client updateNumericInput() Change the value of a number input on the client updateRadioButtons() Change the value of a radio input on the client updateSelectInput(updateSelectizeInput) Change the value of a select input on the client updateSliderInput() Change the value of a slider input on the client updateTabsetPanel(updateNavbarPage, updateNavlistPanel) Change the selected tab on the client insertTab(prependTab, appendTab, removeTab) Dynamically insert/remove a tabPanel showTab (hideTab) Dynamically hide/show a tabPanel updateTextInput() Change the value of a text input on the client updateTextAreaInput() Change the value of a textarea input on the client updateQueryString() Update URL in browser’s location bar getQueryString(getUrlHash) Get the query string / hash component from the URL This is another Input() function with sliderInput(). sliderInput(inputId = &quot;num&quot;, label = &quot;Choose a number&quot;, value = 25, min = 1, max = 100) sliderInput : sliderInput() from a list of Input() functions inputId : input name(internal use) label : label to display is “Choose a number” value = 25, min = 1, max = 100: value falls between 1 and 100 but the sliderbar sits at 25 "],
["output-functions.html", "6 Output() functions", " 6 Output() functions This is how a common Output() function is listed: plotOutput(&quot;hist&quot;) plotOutput(): This is to decide what sort of output to display name label : This is the name given to the output object Here is a list of all Output() functions avaliable: Function Display dataTableOutput() Create an HTML output element plotOutput (imageOutput) Create an plot or image output element outputOptions () Set options for an output object tableOutput (dataTableOutput) Create a table output element textOutput() Create a text output element verbatimTextOutput() Create a verbatim text output element downloadButton (downloadLink) Create a download button or link Progress() Reporting progress (object-oriented API) withProgress (setProgress, incProgress) Reporting progress (functional API) modalDialog() Create a modal dialog UI urlModal() Generate a modal dialog that displays a URL showModal (removeModal) Show or remove a modal dialog showNotification (removeNotification) Show or remove a notification "],
["layout-input-and-output.html", "7 Layout, Input and Output", " 7 Layout, Input and Output This is a simple Shiny app with the Input() and Output() functions. library(shiny) ui &lt;- fluidPage( sliderInput(inputId = &quot;num&quot;, # Input() starts label = &quot;Choose a number&quot;, # Input() continues value = 25, min = 1, max = 100), # Input() ends plotOutput(&quot;hist&quot;) # Output() starts/ends ) server &lt;- function(input, output) {} shinyApp(ui = ui, server = server) sliderInput : sliderInput() from a list of Input() functions inputId : an unique id to the widget so the server side knows how to access it. label : label as “Choose a number”. value = ... max = ) : input specific arguments or parameters. plotOutput(&quot;hist&quot;) : plotOutput() from Output() functions with the object called hist. Attention: While the Output() functions are placed in the UI component, it still needs to express or rebuild itself on the server side. "],
["server-side.html", "8 Server side", " 8 Server side This is the skeleton for the server side. server &lt;- function(input, output) {} First, rebuild the Output() function’s object from the UI side. The object was previously lablled as hist. In a way, output$hist is equivalent of plotOutput(&quot;hist&quot;). server &lt;- function(input, output) { output$hist &lt;- # code } Second, renderYOUR_CHOSEN_OUTPUT_FUNCTION() the output object. In this case, it’s renderPlot({}). server &lt;- function(input, output) { output$hist &lt;- renderPlot({ hist(rnorm(100)) }) } output$hist : the Output() function’s object on the server side. renderPlot : renderPlot as the renderYOUR_CHOSEN_OUTPUT_FUNCTION(). hist(rnorm(100): code block to rebuild the output object. "],
["shinys-tail.html", "9 Shiny’s tail", " 9 Shiny’s tail "],
["references.html", "References", " References Shiny Function reference, version 1.0.5, 1 December 2019. "]
]
